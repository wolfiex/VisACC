"use strict";

const restApiRequest_1 = require("./restApiRequest");
class BintrayClient {
    constructor(owner, packageName, repo, apiKey) {
        this.owner = owner;
        this.packageName = packageName;
        if (owner == null) {
            throw new Error("owner is not specified");
        }
        if (packageName == null) {
            throw new Error("package is not specified");
        }
        this.repo = repo || "generic";
        this.auth = apiKey == null ? null : `Basic ${ new Buffer(`${ owner }:${ apiKey }`).toString("base64") }`;
        this.basePath = `/packages/${ this.owner }/${ this.repo }/${ this.packageName }`;
    }
    getVersion(version) {
        return restApiRequest_1.bintrayRequest(`${ this.basePath }/versions/${ version }`, this.auth);
    }
    getVersionFiles(version) {
        return restApiRequest_1.bintrayRequest(`${ this.basePath }/versions/${ version }/files`, this.auth);
    }
    createVersion(version) {
        return restApiRequest_1.bintrayRequest(`${ this.basePath }/versions`, this.auth, {
            name: version
        });
    }
    deleteVersion(version) {
        return restApiRequest_1.bintrayRequest(`/packages/${ this.owner }/${ this.repo }/${ this.packageName }/versions/${ version }`, this.auth, null, "DELETE");
    }
}
exports.BintrayClient = BintrayClient;
//# sourceMappingURL=bintray.js.map